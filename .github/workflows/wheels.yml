name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - master
  release:
    types:
      - published

env:
  CIBW_SKIP: "cp27*"


jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]

    steps:
    - uses: actions/checkout@v2
    - name: "Pull & update submodules recursively"
      run: |
          git submodule update --init --recursive
          git submodule update --recursive --remote
    - name: Install deps
      run: |
          python3 -m pip install pybind11==2.7.1 && mkdir boost && sudo apt-get install libboost-all-dev
    - name: Install boost
      uses: MarkusJx/install-boost@v2.0.0
      id: install-boost
      with:
        # REQUIRED: Specify the required boost version
        # A list of supported versions can be found here: 
        # https://github.com/actions/boost-versions/blob/main/versions-manifest.json
        boost_version: 1.72.0
        # OPTIONAL: Specify a platform version
        platform_version: 20.04
        # OPTIONAL: Specify a custom install location
        boost_install_dir: .

    # NOTE: If a boost version matching all requirements cannot be found,
    # this build step will fail
    # - name: Setup tmate session
      # uses: mxschmitt/action-tmate@v3
    - name: "Build Cmake"
      run: |
          mkdir build && cd build &&  cmake .. -DCMAKE_BUILD_TYPE=Release  -DTONGRAMS_USE_SANITIZERS=OFF -DEMPHF_USE_POPCOUNT=ON -DTONGRAMS_USE_POPCNT=ON -DTONGRAMS_USE_PDEP=ON && make -j12
      env:
        CIBW_SKIP: "cp27* cp35-*"
    # - name: Setup tmate session
      # uses: mxschmitt/action-tmate@v3
# Used to host cibuildwheel
    - uses: actions/setup-python@v2

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.3.0
    - name: Build wheels
      run: yum install boost boost-devel boost-iostreams boost-regex -y && python -m cibuildwheel --output-dir wheelhouse

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl



